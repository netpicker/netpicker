{{- if .Values.redis.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "netpicker.redis.fullname" . }}
  labels:
    {{- include "netpicker.labels" . | nindent 4 }}
    app.kubernetes.io/component: redis
    netpicker.io: service
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "netpicker.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: redis
  template:
    metadata:
      labels:
        {{- include "netpicker.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: redis
        netpicker.io: service
    spec:
      {{- include "netpicker.imagePullSecrets" . | nindent 6 }}
      containers:
        - name: redis
          image: {{ include "netpicker.image" (dict "global" .Values.global "image" .Values.images.redis) }}
          imagePullPolicy: {{ .Values.images.redis.pullPolicy }}
          args:
            - --save
            - {{ .Values.redis.saveSettings }}
            - --loglevel
            - {{ .Values.redis.logLevel }}
          ports:
            - name: redis
              containerPort: 6379
              protocol: TCP
          volumeMounts:
            - name: data
              mountPath: /data
          livenessProbe:
            exec:
              command:
                - redis-cli
                - --raw
                - incr
                - ping
            initialDelaySeconds: 5
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
                - redis-cli
                - --raw
                - incr
                - ping
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            {{- toYaml .Values.redis.resources | nindent 12 }}
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "netpicker.redis.fullname" . }}-data
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "netpicker.redis.fullname" . }}
  labels:
    {{- include "netpicker.labels" . | nindent 4 }}
    app.kubernetes.io/component: redis
spec:
  type: {{ .Values.redis.service.type }}
  ports:
    - port: {{ .Values.redis.service.port }}
      targetPort: redis
      protocol: TCP
      name: redis
  selector:
    {{- include "netpicker.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: redis
{{- end }} 