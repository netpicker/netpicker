{{- if .Values.db.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "netpicker.db.fullname" . }}
  labels:
    {{- include "netpicker.labels" . | nindent 4 }}
    app.kubernetes.io/component: database
    netpicker.io: service
spec:
  serviceName: {{ include "netpicker.db.fullname" . }}
  replicas: 1
  selector:
    matchLabels:
      {{- include "netpicker.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: database
  template:
    metadata:
      labels:
        {{- include "netpicker.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: database
        netpicker.io: service
    spec:
      {{- include "netpicker.imagePullSecrets" . | nindent 6 }}
      containers:
        - name: db
          image: {{ include "netpicker.image" (dict "global" .Values.global "image" .Values.images.db) }}
          imagePullPolicy: {{ .Values.images.db.pullPolicy }}
          env:
            - name: POSTGRES_PASSWORD
              value: {{ .Values.db.postgresPassword | quote }}
          ports:
            - name: postgres
              containerPort: 5432
              protocol: TCP
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - netpicker
            initialDelaySeconds: 80
            periodSeconds: 30
            timeoutSeconds: 60
            failureThreshold: 5
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - netpicker
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
          resources:
            {{- toYaml .Values.db.resources | nindent 12 }}
  {{- if .Values.db.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          {{- include "netpicker.labels" . | nindent 10 }}
      spec:
        accessModes:
          - {{ .Values.persistence.accessMode | default "ReadWriteOnce" }}
        {{- if .Values.global.storageClass }}
        storageClassName: {{ .Values.global.storageClass }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.db.persistence.size }}
  {{- else }}
      volumes:
        - name: data
          emptyDir: {}
  {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "netpicker.db.fullname" . }}
  labels:
    {{- include "netpicker.labels" . | nindent 4 }}
    app.kubernetes.io/component: database
spec:
  type: {{ .Values.db.service.type }}
  ports:
    - port: {{ .Values.db.service.port }}
      targetPort: postgres
      protocol: TCP
      name: postgres
  selector:
    {{- include "netpicker.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: database
{{- end }} 